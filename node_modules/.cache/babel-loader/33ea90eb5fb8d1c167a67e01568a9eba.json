{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanya\\\\Downloads\\\\react\\\\todolist\\\\src\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./style.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport { FcApproval } from \"react-icons/fc\";\nimport { FaPlus, FaMarker, FaPen, FaTrash } from \"react-icons/fa\";\nimport { useState } from 'react';\nimport { useEffect } from 'react'; //get local storage data back\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getLocalData = () => {\n  const lists = localStorage.getItem(\"mytodolist\");\n\n  if (lists) {\n    return JSON.parse(lists);\n  } else {\n    return [];\n  }\n};\n\nconst Todo = () => {\n  _s();\n\n  const [inputdata, setInputData] = useState(\"\");\n  const [items, setItems] = useState(getLocalData());\n  const [isEditItem, setIsEditItem] = useState(\"\");\n  const [toggleButton, setToggleButton] = useState(false); //add the item func\n\n  const addItem = () => {\n    if (!inputdata) {\n      alert(\"pls fill the data\");\n    } else {\n      const myNewInputData = {\n        id: new Date().getTime().toString(),\n        name: inputdata\n      };\n      setItems([...items, myNewInputData]);\n      setInputData(\"\");\n    }\n  }; //edit the items\n\n\n  const editItem = index => {\n    const item_todo_edited = items.find(curElem => {\n      return curElem.id === index;\n    });\n    setIsEditItem(index);\n    setInputData(item.item_todo_edited.name);\n    setToggleButton(true);\n  }; //how to delete item\n\n\n  const deleteItem = index => {\n    const updatedItems = items.filter(curElem => {\n      return curElem.id !== index;\n    });\n    setItems(updatedItems);\n  }; //remove all items\n\n\n  const removeAll = () => {\n    setItems([]);\n  }; //adding local storage\n\n\n  useEffect(() => {\n    localStorage.setItem(\"mytodolist\", JSON.stringify(items));\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"child_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"todo.svg\",\n            width: \"50px\",\n            alt: \"todologo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n            children: \"Add your List here \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\uD83E\\uDDD0 add items\",\n            className: \"form-control\",\n            value: inputdata,\n            onChange: event => setInputData(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), toggleButton ? /*#__PURE__*/_jsxDEV(FaPen, {\n            className: \"fa fa-plus add-btn\",\n            onClick: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(FaPlus, {\n            className: \"fa fa-plus add-btn\",\n            onClick: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: items.map(curElem => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"eachItem\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: curElem.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-btn\",\n                children: [/*#__PURE__*/_jsxDEV(FaPen, {\n                  className: \"fa fa-plus add-btn\",\n                  onClick: () => editItem(curElem.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 24\n                }, this), /*#__PURE__*/_jsxDEV(FaTrash, {\n                  className: \"fa fa-plus add-btn\",\n                  onClick: () => deleteItem(curElem.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 24\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 24\n              }, this)]\n            }, curElem.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn effect04\",\n            \"data-sm-link-text\": \"Remove All\",\n            onClick: removeAll,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Check list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Todo, \"pSWVxbDsu56RfxAe+aSBxWh6jAM=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/sanya/Downloads/react/todolist/src/Todo.js"],"names":["React","FontAwesomeIcon","faCoffee","FcApproval","FaPlus","FaMarker","FaPen","FaTrash","useState","useEffect","getLocalData","lists","localStorage","getItem","JSON","parse","Todo","inputdata","setInputData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","alert","myNewInputData","id","Date","getTime","toString","name","editItem","index","item_todo_edited","find","curElem","item","deleteItem","updatedItems","filter","removeAll","setItem","stringify","event","target","value","map"],"mappings":"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","sourcesContent":[" import React from 'react'\r\n import \"./style.css\";\r\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n import { faCoffee } from '@fortawesome/free-solid-svg-icons'\r\n import { FcApproval } from \"react-icons/fc\";\r\n import { FaPlus,FaMarker,FaPen,FaTrash } from \"react-icons/fa\";\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n//get local storage data back\r\nconst getLocalData=()=>{\r\nconst lists=localStorage.getItem(\"mytodolist\");\r\nif(lists)\r\n{\r\n    return JSON.parse(lists);\r\n}\r\nelse{\r\n    return [];\r\n}\r\n};\r\n  const Todo =()=>{\r\n      const[inputdata,setInputData]=useState(\"\");\r\n      const [items,setItems]=useState(getLocalData());\r\n      const [isEditItem,setIsEditItem]=useState(\"\");\r\n      const [toggleButton,setToggleButton]=useState(false);\r\n      //add the item func\r\n      const addItem=()=>\r\n      {\r\n          if(!inputdata)\r\n          {\r\n              alert(\"pls fill the data\");\r\n          }\r\n          else{\r\n              const myNewInputData={\r\n                  id:new Date().getTime().toString(),\r\n                  name:inputdata  \r\n              }; \r\n              setItems([...items,myNewInputData]);\r\n              \r\n              setInputData(\"\");\r\n          }\r\n      };\r\n      //edit the items\r\n      const editItem=(index)=>{\r\n      const item_todo_edited=items.find((curElem)=>{\r\n          return curElem.id===index;\r\n      });\r\n      setIsEditItem(index); \r\n      setInputData(item.item_todo_edited.name);\r\n      setToggleButton(true);\r\n      };\r\n       //how to delete item\r\n       const deleteItem=(index)=>{\r\nconst updatedItems=items.filter((curElem)=>\r\n{\r\n    return curElem.id!==index;\r\n}) ;\r\nsetItems(updatedItems);\r\n       };\r\n       //remove all items\r\n       const removeAll=()=>\r\n       {\r\n           setItems([]);\r\n       }\r\n       //adding local storage\r\n       useEffect(()=>{\r\n     localStorage.setItem(\"mytodolist\",JSON.stringify(items));\r\n       },[items]);\r\n      return(\r\n          <>\r\n        <div className=\"main-div\">\r\n            <div className='child_div'>\r\n                <figure>\r\n                    <img src='todo.svg' width='50px' alt=\"todologo\" />\r\n                    <figcaption>Add your List here </figcaption>\r\n                </figure>\r\n                <div className='addItems'>\r\n                    <input type=\"text\"\r\n                    placeholder=\"🧐 add items\" className=\"form-control\"\r\n                        value={inputdata}\r\n                        onChange={(event)=>setInputData(event.target.value)}\r\n                    />\r\n                   {toggleButton?( <FaPen className='fa fa-plus add-btn' onClick={addItem}/> ):\r\n                   ( <FaPlus className='fa fa-plus add-btn' onClick={addItem}/>)\r\n                   }\r\n                  \r\n                </div>\r\n                {/*show our items*/}\r\n               <div className='showItems'>\r\n               {\r\n                   items.map((curElem)=>{\r\n                       return(\r\n                        <div className='eachItem' key={curElem.id}>\r\n                       <h3>{curElem.name}</h3>\r\n                       <div className='todo-btn'>\r\n                       <FaPen className='fa fa-plus add-btn' onClick={()=>editItem(curElem.id)} />\r\n                       <FaTrash className='fa fa-plus add-btn' onClick={()=>\r\n                       deleteItem(curElem.id)} />\r\n\r\n                       </div>\r\n                   </div>\r\n                       );\r\n                   })\r\n               }\r\n                  \r\n               </div>\r\n                <div className='showItems'>\r\n                <button className='btn effect04' data-sm-link-text=\"Remove All\" onClick={removeAll}>\r\n                <span>\r\n                    Check list\r\n                    </span>\r\n\r\n                </button>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n          </>\r\n      );\r\n  }\r\n  export default Todo;"]},"metadata":{},"sourceType":"module"}